stages:
  - build
  - scan
  - push

variables:
  DOCKER_IMAGE: "my-python-app"
  DOCKER_TAG: "latest"
  TRIVY_VERSION: "0.45.1"

# Build the Docker image
build_image:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "Building Docker image..."
    - docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
  artifacts:
    paths:
      - $DOCKER_IMAGE.tar

# Scan the Docker image with Trivy
scan_image:
  stage: scan
  image: alpine:latest
  script:
    - echo "Installing Trivy..."
    - wget https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz
    - tar -xzf trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz
    - echo "Scanning Docker image with Trivy..."
    - ./trivy image --exit-code 1 --severity HIGH,CRITICAL $DOCKER_IMAGE:$DOCKER_TAG
  allow_failure: false

# Push the Docker image to a registry
push_image:
  stage: push
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "Logging in to Docker Hub..."
    - docker login -u "$DOCKER_HUB_USERNAME" -p "$DOCKER_HUB_PASSWORD"
    - echo "Pushing Docker image to Docker Hub..."
    - docker tag $DOCKER_IMAGE:$DOCKER_TAG $DOCKER_HUB_USERNAME/$DOCKER_IMAGE:$DOCKER_TAG
    - docker push $DOCKER_HUB_USERNAME/$DOCKER_IMAGE:$DOCKER_TAG
  only:
    - main
